openapi: 3.0.0
swagger: 2.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 1.0.0

servers:
  - url: http://localhost:4545
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

# //   apis:["./api/customerAPI/customerRoute.ts","server.ts"]

# components:
#      schemas:
#        Customer:
#               type: object
#               required:
#                 - name
#                 - adress
#                 - mobileNumber
# properties:
#         name:
#            type: string
#            description: customer name
#         adress:
#            type: string
#            description: customer adress
#         mobileNumber:
#            type: integer
#            description: customer mobileNumber



paths:
#get all customer api 
  /api/customers/AllCustomers:
    get:
      summary: Returns a list of customers.
      description: People Who are already registered
      responses:
        201: # status code
          description: Successful responses
        400: # status code
          description: bad request
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string


  /api/customers/Addcustomer:
    post:
      summary: return list of customers
      description: People Who are already registered
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Customer'     # <----------
          application/xml:
            schema:
              $ref: '#/definitions/Customer'     # <----------
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/definitions/Customer'     # <----------
          text/plain:
            schema:
              type: string
      responses:
        201: # status code
          description: success Customer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer_name:
                    type: string
                    example:
                     customer_name: mohamad 
                    description:  UserName
                  customer_adress:
                    type: string
                    description: customer adress 
                  customer_mobile_number:
                    type: number
                    description:  customer phone number


        471: # status code
          description: failed invalid phone number ...dont forget to add prefix
        470: # status code
          description: failed  phone number already exists 
        422: # status code
          description: failed number of third party apis calls haa finished 
          

#update customer detail  api 

  /api/customers/update/{id}:
    patch:
      summary: return success or failed.
      description: update  customer by id.
      parameters:
        - name: id
          in: path
          required: true
      schema:
            type : string
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Customer'  
      responses:
        '201':
          description: updated


#delete  a customer api 
  /api/customers/DeleteCustomer/{id}:
    delete:
      summary: return success or failed.
      description: delete  customer by id.
      parameters:
        - name: id
          in: path
          required: true
      schema:
            type : string
      responses:
        201: # status code
          description: success Customer deleted
        471: # status code
          description: customer id not found 
        470: # status code
          description: failed  id must be 12-byte binary value, represented as a 24 character hex string.



definitions:
  Customer:           
    type: object
    required:
         - customer_name
         - customer_adress
         - customer_mobile_number
    properties:
        customer_name:
          type: string
        customer_adress:
          type: string
        customer_mobile_number:
          type: number 

          